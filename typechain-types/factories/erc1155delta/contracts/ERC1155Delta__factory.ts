/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155Delta,
  ERC1155DeltaInterface,
} from "../../../erc1155delta/contracts/ERC1155Delta";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnFromNonOnwerAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InputLengthMistmatch",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwnerOrInvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "isOwnerOf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620026c8380380620026c8833981810160405281019062000037919062000212565b62000048816200006560201b60201c565b620000586200007a60201b60201c565b6003819055505062000595565b8060029081620000769190620004ae565b5050565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e8826200009d565b810181811067ffffffffffffffff821117156200010a5762000109620000ae565b5b80604052505050565b60006200011f6200007f565b90506200012d8282620000dd565b919050565b600067ffffffffffffffff82111562000150576200014f620000ae565b5b6200015b826200009d565b9050602081019050919050565b60005b83811015620001885780820151818401526020810190506200016b565b60008484015250505050565b6000620001ab620001a58462000132565b62000113565b905082815260208101848484011115620001ca57620001c962000098565b5b620001d784828562000168565b509392505050565b600082601f830112620001f757620001f662000093565b5b81516200020984826020860162000194565b91505092915050565b6000602082840312156200022b576200022a62000089565b5b600082015167ffffffffffffffff8111156200024c576200024b6200008e565b5b6200025a84828501620001df565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002b657607f821691505b602082108103620002cc57620002cb6200026e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002f7565b620003428683620002f7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200038f6200038962000383846200035a565b62000364565b6200035a565b9050919050565b6000819050919050565b620003ab836200036e565b620003c3620003ba8262000396565b84845462000304565b825550505050565b600090565b620003da620003cb565b620003e7818484620003a0565b505050565b5b818110156200040f5762000403600082620003d0565b600181019050620003ed565b5050565b601f8211156200045e576200042881620002d2565b6200043384620002e7565b8101602085101562000443578190505b6200045b6200045285620002e7565b830182620003ec565b50505b505050565b600082821c905092915050565b6000620004836000198460080262000463565b1980831691505092915050565b60006200049e838362000470565b9150826002028217905092915050565b620004b98262000263565b67ffffffffffffffff811115620004d557620004d4620000ae565b5b620004e182546200029d565b620004ee82828562000413565b600060209050601f83116001811462000526576000841562000511578287015190505b6200051d858262000490565b8655506200058d565b601f1984166200053686620002d2565b60005b82811015620005605784890151825560018201915060208501945060208101905062000539565b868310156200058057848901516200057c601f89168262000470565b8355505b6001600288020188555050505b505050505050565b61212380620005a56000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80634e1273f4116100665780634e1273f414610143578063a22cb46514610173578063c5b8f7721461018f578063e985e9c5146101bf578063f242432a146101ef57610092565b8062fdd58e1461009757806301ffc9a7146100c75780630e89341c146100f75780632eb2c2d614610127575b600080fd5b6100b160048036038101906100ac91906114a0565b61020b565b6040516100be91906114ef565b60405180910390f35b6100e160048036038101906100dc9190611562565b6102db565b6040516100ee91906115aa565b60405180910390f35b610111600480360381019061010c91906115c5565b610425565b60405161011e9190611682565b60405180910390f35b610141600480360381019061013c91906118a1565b6104b9565b005b61015d60048036038101906101589190611a33565b610551565b60405161016a9190611b69565b60405180910390f35b61018d60048036038101906101889190611bb7565b610661565b005b6101a960048036038101906101a491906114a0565b610677565b6040516101b691906115aa565b60405180910390f35b6101d960048036038101906101d49190611bf7565b6106d1565b6040516101e691906115aa565b60405180910390f35b61020960048036038101906102049190611c37565b610765565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610272576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102c2826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061080390919063ffffffff16565b156102d057600190506102d5565b600090505b92915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103a657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040e57507fc5b8f772000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061041e575061041d82610835565b5b9050919050565b60606002805461043490611cfd565b80601f016020809104026020016040519081016040528092919081815260200182805461046090611cfd565b80156104ad5780601f10610482576101008083540402835291602001916104ad565b820191906000526020600020905b81548152906001019060200180831161049057829003601f168201915b50505050509050919050565b6104c161089f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061050757506105068561050161089f565b6106d1565b5b61053d576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054a85858585856108a7565b5050505050565b6060815183511461058e576040517f7801f4e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835167ffffffffffffffff8111156105ab576105aa6116a9565b5b6040519080825280602002602001820160405280156105d95781602001602082028036833780820191505090505b50905060005b8451811015610656576106268582815181106105fe576105fd611d2e565b5b602002602001015185838151811061061957610618611d2e565b5b602002602001015161020b565b82828151811061063957610638611d2e565b5b6020026020010181815250508061064f90611d8c565b90506105df565b508091505092915050565b61067361066c61089f565b8383610b96565b5050565b60006106c9826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061080390919063ffffffff16565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61076d61089f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806107b357506107b2856107ad61089f565b6106d1565b5b156107ca576107c58585858585610d02565b6107fc565b6040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b600080600160ff8416856000016000600887901c815260200190815260200160002054901c1690508091505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146108e2576040517f7801f4e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610948576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061095261089f565b905061096081878787610f66565b60005b8451811015610af557600085828151811061098157610980611d2e565b5b6020026020010151905060008583815181106109a05761099f611d2e565b5b60200260200101519050600181148015610a065750610a05826000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061080390919063ffffffff16565b5b15610ab057610a5b826000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f6c90919063ffffffff16565b610aab826000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f9f90919063ffffffff16565b610ae2565b6040517f37dbad3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505080610aee90611d8c565b9050610963565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b6c929190611dd4565b60405180910390a4610b8081878787610fd1565b610b8e818787878787610fd7565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfb90611e7d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cf591906115aa565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d68576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d7261089f565b90506000610d7f8561119c565b9050610d8d82888884610f66565b600184148015610de95750610de8856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061080390919063ffffffff16565b5b15610e9357610e3e856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f6c90919063ffffffff16565b610e8e856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f9f90919063ffffffff16565b610ec5565b6040517f37dbad3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610f3b929190611e9d565b60405180910390a4610f4f82888884610fd1565b610f5d828888888888611210565b50505050505050565b50505050565b60ff81166001901b19826000016000600884901c8152602001908152602001600020600082825416925050819055505050565b60ff81166001901b826000016000600884901c8152602001908152602001600020600082825417925050819055505050565b50505050565b610ff68473ffffffffffffffffffffffffffffffffffffffff166113d5565b15611194578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161103c959493929190611f2a565b6020604051808303816000875af192505050801561107857506040513d601f19601f820116820180604052508101906110759190611fa7565b60015b61111457611084611fe1565b806308c379a0036110e05750611098612003565b806110a357506110e2565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d79190611682565b60405180910390fd5b505b6040517f9c05499b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611192576040517f9c05499b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050505050565b6060600167ffffffffffffffff8111156111b9576111b86116a9565b5b6040519080825280602002602001820160405280156111e75781602001602082028036833780820191505090505b50905081816000815181106111ff576111fe611d2e565b5b602002602001018181525050919050565b61122f8473ffffffffffffffffffffffffffffffffffffffff166113d5565b156113cd578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611275959493929190612093565b6020604051808303816000875af19250505080156112b157506040513d601f19601f820116820180604052508101906112ae9190611fa7565b60015b61134d576112bd611fe1565b806308c379a00361131957506112d1612003565b806112dc575061131b565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113109190611682565b60405180910390fd5b505b6040517f9c05499b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113cb576040517f9c05499b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114378261140c565b9050919050565b6114478161142c565b811461145257600080fd5b50565b6000813590506114648161143e565b92915050565b6000819050919050565b61147d8161146a565b811461148857600080fd5b50565b60008135905061149a81611474565b92915050565b600080604083850312156114b7576114b6611402565b5b60006114c585828601611455565b92505060206114d68582860161148b565b9150509250929050565b6114e98161146a565b82525050565b600060208201905061150460008301846114e0565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61153f8161150a565b811461154a57600080fd5b50565b60008135905061155c81611536565b92915050565b60006020828403121561157857611577611402565b5b60006115868482850161154d565b91505092915050565b60008115159050919050565b6115a48161158f565b82525050565b60006020820190506115bf600083018461159b565b92915050565b6000602082840312156115db576115da611402565b5b60006115e98482850161148b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561162c578082015181840152602081019050611611565b60008484015250505050565b6000601f19601f8301169050919050565b6000611654826115f2565b61165e81856115fd565b935061166e81856020860161160e565b61167781611638565b840191505092915050565b6000602082019050818103600083015261169c8184611649565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116e182611638565b810181811067ffffffffffffffff82111715611700576116ff6116a9565b5b80604052505050565b60006117136113f8565b905061171f82826116d8565b919050565b600067ffffffffffffffff82111561173f5761173e6116a9565b5b602082029050602081019050919050565b600080fd5b600061176861176384611724565b611709565b9050808382526020820190506020840283018581111561178b5761178a611750565b5b835b818110156117b457806117a0888261148b565b84526020840193505060208101905061178d565b5050509392505050565b600082601f8301126117d3576117d26116a4565b5b81356117e3848260208601611755565b91505092915050565b600080fd5b600067ffffffffffffffff82111561180c5761180b6116a9565b5b61181582611638565b9050602081019050919050565b82818337600083830152505050565b600061184461183f846117f1565b611709565b9050828152602081018484840111156118605761185f6117ec565b5b61186b848285611822565b509392505050565b600082601f830112611888576118876116a4565b5b8135611898848260208601611831565b91505092915050565b600080600080600060a086880312156118bd576118bc611402565b5b60006118cb88828901611455565b95505060206118dc88828901611455565b945050604086013567ffffffffffffffff8111156118fd576118fc611407565b5b611909888289016117be565b935050606086013567ffffffffffffffff81111561192a57611929611407565b5b611936888289016117be565b925050608086013567ffffffffffffffff81111561195757611956611407565b5b61196388828901611873565b9150509295509295909350565b600067ffffffffffffffff82111561198b5761198a6116a9565b5b602082029050602081019050919050565b60006119af6119aa84611970565b611709565b905080838252602082019050602084028301858111156119d2576119d1611750565b5b835b818110156119fb57806119e78882611455565b8452602084019350506020810190506119d4565b5050509392505050565b600082601f830112611a1a57611a196116a4565b5b8135611a2a84826020860161199c565b91505092915050565b60008060408385031215611a4a57611a49611402565b5b600083013567ffffffffffffffff811115611a6857611a67611407565b5b611a7485828601611a05565b925050602083013567ffffffffffffffff811115611a9557611a94611407565b5b611aa1858286016117be565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ae08161146a565b82525050565b6000611af28383611ad7565b60208301905092915050565b6000602082019050919050565b6000611b1682611aab565b611b208185611ab6565b9350611b2b83611ac7565b8060005b83811015611b5c578151611b438882611ae6565b9750611b4e83611afe565b925050600181019050611b2f565b5085935050505092915050565b60006020820190508181036000830152611b838184611b0b565b905092915050565b611b948161158f565b8114611b9f57600080fd5b50565b600081359050611bb181611b8b565b92915050565b60008060408385031215611bce57611bcd611402565b5b6000611bdc85828601611455565b9250506020611bed85828601611ba2565b9150509250929050565b60008060408385031215611c0e57611c0d611402565b5b6000611c1c85828601611455565b9250506020611c2d85828601611455565b9150509250929050565b600080600080600060a08688031215611c5357611c52611402565b5b6000611c6188828901611455565b9550506020611c7288828901611455565b9450506040611c838882890161148b565b9350506060611c948882890161148b565b925050608086013567ffffffffffffffff811115611cb557611cb4611407565b5b611cc188828901611873565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d1557607f821691505b602082108103611d2857611d27611cce565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d978261146a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dc957611dc8611d5d565b5b600182019050919050565b60006040820190508181036000830152611dee8185611b0b565b90508181036020830152611e028184611b0b565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b6000611e676029836115fd565b9150611e7282611e0b565b604082019050919050565b60006020820190508181036000830152611e9681611e5a565b9050919050565b6000604082019050611eb260008301856114e0565b611ebf60208301846114e0565b9392505050565b611ecf8161142c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611efc82611ed5565b611f068185611ee0565b9350611f1681856020860161160e565b611f1f81611638565b840191505092915050565b600060a082019050611f3f6000830188611ec6565b611f4c6020830187611ec6565b8181036040830152611f5e8186611b0b565b90508181036060830152611f728185611b0b565b90508181036080830152611f868184611ef1565b90509695505050505050565b600081519050611fa181611536565b92915050565b600060208284031215611fbd57611fbc611402565b5b6000611fcb84828501611f92565b91505092915050565b60008160e01c9050919050565b600060033d11156120005760046000803e611ffd600051611fd4565b90505b90565b600060443d10612090576120156113f8565b60043d036004823e80513d602482011167ffffffffffffffff8211171561203d575050612090565b808201805167ffffffffffffffff81111561205b5750505050612090565b80602083010160043d038501811115612078575050505050612090565b612087826020018501866116d8565b82955050505050505b90565b600060a0820190506120a86000830188611ec6565b6120b56020830187611ec6565b6120c260408301866114e0565b6120cf60608301856114e0565b81810360808301526120e18184611ef1565b9050969550505050505056fea2646970667358221220f9e9c91e7e9e2fd378e313789ba26bd07da9a1d432e0c001bde8a6194cd607df64736f6c63430008140033";

type ERC1155DeltaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155DeltaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Delta__factory extends ContractFactory {
  constructor(...args: ERC1155DeltaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Delta> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155Delta>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155Delta {
    return super.attach(address) as ERC1155Delta;
  }
  override connect(signer: Signer): ERC1155Delta__factory {
    return super.connect(signer) as ERC1155Delta__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155DeltaInterface {
    return new utils.Interface(_abi) as ERC1155DeltaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Delta {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Delta;
  }
}
